{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Personal\\\\Documents\\\\GitHub\\\\fintube\\\\fintube\\\\src\\\\components\\\\videoPlayer\\\\videoPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLibraryContext } from \"../../Context\";\nimport { videoList } from \"../../dataBase\";\nimport { VideoCard } from \"..\";\nimport './videoPlayer.css';\nimport '../VideoPage/videoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoPlayer = () => {\n  _s();\n\n  const {\n    videoPlaying\n  } = useLibraryContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-player-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"800\",\n        height: \"450\",\n        src: `https://www.youtube.com/embed/${videoPlaying.id}`,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile-icon\",\n            src: `${videoPlaying.img}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: \"white\",\n              marginBottom: '0.2rem'\n            },\n            children: videoPlaying.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: videoPlaying.channelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [videoPlaying.views, \" views .\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: videoPlaying.UploadedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classsName: \"media-list\",\n      children: videoList.map(video => {\n        return /*#__PURE__*/_jsxDEV(VideoCard, {\n          video: video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_s(VideoPlayer, \"rhSOfIVcYdsVBlwYh+Pe76SLsuo=\", false, function () {\n  return [useLibraryContext];\n});\n\n_c = VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["C:/Users/Personal/Documents/GitHub/fintube/fintube/src/components/videoPlayer/videoPlayer.jsx"],"names":["useLibraryContext","videoList","VideoCard","VideoPlayer","videoPlaying","id","display","justifyContent","img","color","marginBottom","name","channelName","views","UploadedDate","map","video"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,eAAlC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,IAA1B;AACA,OAAO,mBAAP;AACA,OAAO,wBAAP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAeJ,iBAAiB,EAAtC;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACE;AACA,QAAA,KAAK,EAAC,KADN;AACY,QAAA,MAAM,EAAC,KADnB;AAEE,QAAA,GAAG,EAAG,iCAAgCI,YAAY,CAACC,EAAG,EAFxD;AAGE,QAAA,KAAK,EAAC,sBAHR;AAIE,QAAA,WAAW,EAAC,GAJd;AAKE,QAAA,KAAK,EAAC,0FALR;AAME,QAAA,eAAe;AANjB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC,MAAT;AAAgBC,UAAAA,cAAc,EAAC;AAA/B,SAAZ;AAAA,gCACkB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,GAAG,EAAG,GAAEH,YAAY,CAACI,GAAI;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADlB,eAIoB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAI,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,OAAP;AAAeC,cAAAA,YAAY,EAAC;AAA5B,aAAX;AAAA,sBAAmDN,YAAY,CAACO;AAAhE;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAKP,YAAY,CAACQ;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAK,YAAA,KAAK,EAAE;AAACN,cAAAA,OAAO,EAAC;AAAT,aAAZ;AAAA,oCACA;AAAA,yBAAKF,YAAY,CAACS,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKT,YAAY,CAACU;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAwBI;AAAK,MAAA,UAAU,EAAC,YAAhB;AAAA,gBACGb,SAAS,CAACc,GAAV,CAAeC,KAAD,IAAS;AACrB,4BACC,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AAGF,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiCC,CAnCI;;GAAMb,W;UACUH,iB;;;KADVG,W","sourcesContent":["import { useLibraryContext } from \"../../Context\";\r\nimport { videoList } from \"../../dataBase\";\r\nimport { VideoCard } from \"..\";\r\nimport './videoPlayer.css';\r\nimport '../VideoPage/videoList';\r\nexport const VideoPlayer = () => {\r\n  const {videoPlaying}=useLibraryContext();\r\n  return(\r\n  <div className='media-player-body'>\r\n      <div  className=\"media-player\">\r\n        <iframe\r\n        width=\"800\" height=\"450\" \r\n          src={`https://www.youtube.com/embed/${videoPlaying.id}`}\r\n          title=\"YouTube video player\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe> \r\n        <div style={{display:\"flex\",justifyContent:\"space-around\"}}>\r\n                          <div>\r\n                            <img className='profile-icon' src={`${videoPlaying.img}`}/>\r\n                            </div>\r\n                            <div className='video-content'>\r\n                            <h5 style={{color:\"white\",marginBottom:'0.2rem'}}>{videoPlaying.name}</h5>\r\n                            <h5>{videoPlaying.channelName}</h5>\r\n                            <div style={{display:'flex'}}>\r\n                            <h6>{videoPlaying.views} views .</h6>\r\n                            <h6>{videoPlaying.UploadedDate}</h6>\r\n                            </div>\r\n                        </div>\r\n                      </div>  \r\n      </div>\r\n      <div classsName='media-list'>\r\n        {videoList.map((video)=>{\r\n           return(\r\n            <VideoCard video={video} />\r\n        )\r\n        })}\r\n      </div>\r\n    </div>)\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}