{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Personal\\\\Documents\\\\GitHub\\\\fintube\\\\fintube\\\\src\\\\Context\\\\libraryProvider-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LibraryContext = /*#__PURE__*/createContext();\nexport function LibraryProvider({\n  children\n}) {\n  _s();\n\n  const [videoPlaying, setVideoPlaying] = useState();\n  const [videoPlayer, setVideoPlayer] = useState(false);\n  return /*#__PURE__*/_jsxDEV(LibraryContext.Provider, {\n    value: {\n      videoPlaying,\n      setVideoPlaying,\n      videoPlayer,\n      setVideoPlayer\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_s(LibraryProvider, \"C3UXhVVjecuHBzXNuMQJtdxiaHo=\");\n\n_c = LibraryProvider;\nexport function useLibraryContext() {\n  _s2();\n\n  return useContext(LibraryContext);\n} // const themeColorWhite={\n//    color:\"black\",\n//    backgroundColor:\"white\"\n// }\n// const themeColorBlack={\n//    color:\"white\",\n//    backgroundColor:\"black\"\n// }\n// const[themeColor,setThemeColor]=useState(themeColorWhite);\n// function colorChanger(color){\n//    if(color==='light'){\n//       setThemeColor(themeColorWhite)\n//    }else{\n//       setThemeColor(themeColorBlack)\n//    }\n// }\n\n_s2(useLibraryContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryProvider\");","map":{"version":3,"sources":["C:/Users/Personal/Documents/GitHub/fintube/fintube/src/Context/libraryProvider-context.js"],"names":["createContext","useContext","useState","LibraryContext","LibraryProvider","children","videoPlaying","setVideoPlaying","videoPlayer","setVideoPlayer","useLibraryContext"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,OAAO,MAAMC,cAAc,gBAACH,aAAa,EAAlC;AAEP,OAAO,SAASI,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAoC;AAAA;;AAC3C,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BL,QAAQ,EAA7C;AACA,QAAK,CAACM,WAAD,EAAaC,cAAb,IAA6BP,QAAQ,CAAC,KAAD,CAA1C;AACG,sBAAQ,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACI,MAAAA,YAAD;AAAcC,MAAAA,eAAd;AAA8BC,MAAAA,WAA9B;AAA0CC,MAAAA;AAA1C,KAAhC;AAAA,cACFJ;AADE;AAAA;AAAA;AAAA;AAAA,UAAR;AAIF;;GAPeD,e;;KAAAA,e;AAQhB,OAAO,SAASM,iBAAT,GAA4B;AAAA;;AAChC,SAAOT,UAAU,CAACE,cAAD,CAAjB;AACF,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IArBgBO,iB","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const LibraryContext=createContext()\r\n\r\nexport function LibraryProvider({children}){\r\nconst [videoPlaying,setVideoPlaying]=useState();\r\nconst[videoPlayer,setVideoPlayer]=useState(false)\r\n   return( <LibraryContext.Provider value={{videoPlaying,setVideoPlaying,videoPlayer,setVideoPlayer}}>\r\n        {children}\r\n    </LibraryContext.Provider>\r\n   )\r\n}\r\nexport function useLibraryContext(){\r\n   return useContext(LibraryContext)\r\n}\r\n\r\n// const themeColorWhite={\r\n//    color:\"black\",\r\n//    backgroundColor:\"white\"\r\n\r\n// }\r\n// const themeColorBlack={\r\n//    color:\"white\",\r\n//    backgroundColor:\"black\"\r\n\r\n// }\r\n// const[themeColor,setThemeColor]=useState(themeColorWhite);\r\n// function colorChanger(color){\r\n//    if(color==='light'){\r\n//       setThemeColor(themeColorWhite)\r\n//    }else{\r\n//       setThemeColor(themeColorBlack)\r\n//    }\r\n// }"]},"metadata":{},"sourceType":"module"}